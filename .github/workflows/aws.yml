on:
  release:
    types: [created]
  push:
    branches:
      - test/deployment

name: Deploy to Amazon ECS

jobs:
  build_and_push_image:
    name: Build and Push image to ECR
    runs-on: ubuntu-latest
    outputs:
      github_sha: ${{ steps.build-image.outputs.github_sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          # docker --version
          docker build  --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=github_sha::$IMAGE_TAG"
#   deploy_mainnet_bitcore-node:
#     name: Deploy mainnet bitcore-node to ECS
#     needs: build_and_push_image
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-southeast-1
#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1
#       - name: Download task definition for bitcorenode-mainnet
#         run: |
#           aws ecs describe-task-definition --task-definition ${{ secrets.AWS_ECR_TASK_BITCORE_NODE_MAINNET }} --query taskDefinition > defi-explorer-bitcorenode-mainnet.json
#       - name: Create Image string
#         id: create_image_string
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
#           IMAGE_TAG: ${{ needs.build_and_push_image.outputs.github_sha }}
#         run: |
#           echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
#       - name: Fill in the new image ID in the Amazon ECS task definition for Bitcore node mainnet
#         id: bitcore-node-task-def-mainnet
#         uses: aws-actions/amazon-ecs-render-task-definition@v1
#         with:
#           task-definition: defi-explorer-bitcorenode-mainnet.json
#           container-name: bitcorenode
#           image: ${{ steps.create_image_string.outputs.image }}
#       - name: Deploy Bitcore node on ECS task definition for mainnet
#         id: ecs-deploy-bitcore-node
#         uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#         with:
#           task-definition: ${{ steps.bitcore-node-task-def-mainnet.outputs.task-definition }}
#           service: ${{ secrets.AWS_ECR_SERVICE_BITCORE_NODE_MAINNET }}
#           cluster: ${{ secrets.AWS_ECR_CLUSTER }}
#           wait-for-service-stability: true
#   deploy_mainnet_insight:
#     name: Deploy mainnet insight to ECS
#     needs: build_and_push_image
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-southeast-1
#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1
#       - name: Download task definition for insight-mainnet
#         run: |
#           aws ecs describe-task-definition --task-definition ${{ secrets.AWS_ECR_TASK_INSIGHT_MAINNET }} --query taskDefinition > defi-explorer-insight-mainnet.json
#       - name: Create Image string
#         id: create_image_string
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
#           IMAGE_TAG: ${{ needs.build_and_push_image.outputs.github_sha }}
#         run: |
#           echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
#       - name: Fill in the new image ID in the Amazon ECS task definition for Insight mainnet
#         id: insight-task-def-mainnet
#         uses: aws-actions/amazon-ecs-render-task-definition@v1
#         with:
#           task-definition: defi-explorer-insight-mainnet.json
#           container-name: insight
#           image: ${{ steps.create_image_string.outputs.image }}
#       - name: Deploy Insight on ECS task definition for mainnet
#         id: ecs-deploy-insight
#         uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#         with:
#           task-definition: ${{ steps.insight-task-def-mainnet.outputs.task-definition }}
#           service: ${{ secrets.AWS_ECR_SERVICE_INSIGHT_MAINNET }}
#           cluster: ${{ secrets.AWS_ECR_CLUSTER }}
#           wait-for-service-stability: true

#   deploy_testnet_bitcore-node:
#     name: Deploy testnet bitcore-node to ECS
#     needs: build_and_push_image
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-southeast-1
#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1
#       - name: Download task definition for bitcorenode-testnet
#         run: |
#           aws ecs describe-task-definition --task-definition ${{ secrets.AWS_ECR_TASK_BITCORE_NODE_TESTNET }} --query taskDefinition > defi-explorer-bitcorenode-testnet.json
#           echo ${{needs.build_and_push_image.outputs.github_sha}}
#       - name: Create Image string
#         id: create_image_string
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
#           IMAGE_TAG: ${{ needs.build_and_push_image.outputs.github_sha }}
#         run: |
#           echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
#       - name: Fill in the new image ID in the Amazon ECS task definition for Bitcore node testnet
#         id: bitcore-node-task-def-testnet
#         uses: aws-actions/amazon-ecs-render-task-definition@v1
#         with:
#           task-definition: defi-explorer-bitcorenode-testnet.json
#           container-name: bitcorenode
#           image: ${{ steps.create_image_string.outputs.image }}
#       - name: Deploy Bitcore node on ECS task definition for testnet
#         id: ecs-deploy-bitcore-node
#         uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#         with:
#           task-definition: ${{ steps.bitcore-node-task-def-testnet.outputs.task-definition }}
#           service: ${{ secrets.AWS_ECR_SERVICE_BITCORE_NODE_TESTNET }}
#           cluster: ${{ secrets.AWS_ECR_CLUSTER }}
#           wait-for-service-stability: true
#   deploy_testnet_insight:
#     name: Deploy testnet insight to ECS
#     needs: build_and_push_image
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-southeast-1
#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1
#       - name: Download task definition for insight-testnet
#         run: |
#           aws ecs describe-task-definition --task-definition ${{ secrets.AWS_ECR_TASK_INSIGHT_TESTNET }} --query taskDefinition > defi-explorer-insight-testnet.json
#       - name: Create Image string
#         id: create_image_string
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
#           IMAGE_TAG: ${{ needs.build_and_push_image.outputs.github_sha }}
#         run: |
#           echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
#       - name: Fill in the new image ID in the Amazon ECS task definition for Insight testnet
#         id: insight-task-def-testnet
#         uses: aws-actions/amazon-ecs-render-task-definition@v1
#         with:
#           task-definition: defi-explorer-insight-testnet.json
#           container-name: insight
#           image: ${{ steps.create_image_string.outputs.image }}
#       - name: Deploy Insight on ECS task definition for testnet
#         id: ecs-deploy-insight
#         uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#         with:
#           task-definition: ${{ steps.insight-task-def-testnet.outputs.task-definition }}
#           service: ${{ secrets.AWS_ECR_SERVICE_INSIGHT_TESTNET }}
#           cluster: ${{ secrets.AWS_ECR_CLUSTER }}
#           wait-for-service-stability: true
